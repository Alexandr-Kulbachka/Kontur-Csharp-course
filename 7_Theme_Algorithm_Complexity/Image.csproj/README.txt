Представьте себе робота-уборщика на кухне, которого только что случайно пнула хозяйка. Ему нужно сориентироваться, 
где он теперь находится и куда повёрнут. К счастью у робота есть камера, а пол на кухне выложен квадратной кафельной 
плиткой. Осталось немного обработать изображение с видеокамеры, выделить границы объектов и по ним сориентироваться.

Первым шагом нужно перевести цветное изображение в оттенки серого. Его будет проще анализировать.

Выполните эту задачу в файле GrayscaleTask.cs

-----------------------------------------------------------------------------------------------------------------------

Продолжайте в том же проекте

Перед преобразованием в черно-белое, с изображения лучше бы удалить шум.

Для этого обработайте его так называемым медианным фильтром. Каждый пиксель изображения нужно заменить медианой всех 
пикселей в 1-окрестности этого пикселя. То есть для внутреннего пикселя, это будет медиана 9 значений. А для углового — 
медиана 4 значений.

Медианой массива называется значение элемента, который окажется точно посередине после сортировки массива по возрастанию. 
Медианой четного количества значений для определённости считайте среднее арифметическое двух значений посередине 
отсортированного массива.

Выполните эту задачу в файле MedianFilterTask.cs

-----------------------------------------------------------------------------------------------------------------------

Продолжайте в том же проекте

Пора превратить изображение в черно-белое.

Сделать это можно с помощью порогового преобразования. Реализуйте его в методе

public static double[,] ThresholdFilter(double[,] original, double whitePixelsFraction)

Метод должен заменять пиксели со значением больше либо равному порогу T на белый (1.0), а остальные на черный (0.0).

Пороговое значение T найдите так, чтобы:

    если N — общее количество пикселей изображения, то как минимум (int)(whitePixelsFraction*N) пикселей стали белыми;
    при этом белыми стало как можно меньше пикселей.

Выполните эту задачу в файле ThresholdFilterTask.cs

-----------------------------------------------------------------------------------------------------------------------

Продолжайте в том же проекте

Перед преобразованием в черно-белое, хорошо бы каким-то образом выделить границы объектов, чтобы только они стали белыми, 
а всё остальное черным.

Оказывается, это не сложно сделать с помощью так называемого фильтра Собеля. Он уже реализован в файле SobelFilterTask.cs. Ваша задача — обобщить этот код. Подробности — в комментариях!

Выполните эту задачу в файле SobelFilterTask.cs